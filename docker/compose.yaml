services:

  nginx:
    image: nginx:1.29
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      frontend:
    ports:
      - "81:80"

  registry-srv:
    image: registry:3.0
    container_name: registry-srv
    restart: unless-stopped
    environment:
      - OTEL_TRACES_EXPORTER=none
      - REGISTRY_LOG_LEVEL=info
    volumes:
      - registry-srv:/var/lib/registry
    networks:
      backend:
    ports:
      - "10.1.2.1:8000:5000"

  registry-web:
    image: joxit/docker-registry-ui:2.5.7
    container_name: registry-web
    restart: unless-stopped
    environment:
      - REGISTRY_URL=https://registry.domain.ru
      - REGISTRY_SECURED=false
      - REGISTRY_TITLE="registry.domain.ru"
      - SHOW_CATALOG_NB_TAGS=true
      - DELETE_IMAGES=true

    volumes:
      - registry-web:/data
    networks:
      backend:
    ports:
      - "10.1.2.1:8001:80"

  portainer:
    image: portainer/portainer-ce:2.31.3
    container_name: portainer
    restart: unless-stopped
    command: --http-enabled
    environment:
      - TRUSTED_ORIGINS=registry.domain.ru
    volumes:
      - portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      backend:
    ports:
      - "10.1.2.1:8002:9000"

  dozzle:
    image: amir20/dozzle:v8.13.7
    container_name: dozzle
    restart: unless-stopped
    command: --base /dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      backend:
    ports:
      - "10.1.2.1:8003:8080"

volumes:
  portainer:
  registry-srv:
  registry-web:

networks:
  frontend:
   driver: bridge
   enable_ipv6: false
   ipam:
     config:
       - subnet: 172.16.8.0/24
  backend:
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 10.1.2.0/24
